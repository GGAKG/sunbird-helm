apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.namespace | quote }}
  name: {{ .Values.file_storage.name | quote }}
  labels:
     app: {{ .Values.file_storage.label.app | quote }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.file_storage.label.app | quote }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.file_storage.label.app | quote }}
    spec:
      containers:
        - name: {{ .Values.file_storage.container.name | quote }}
          image: quay.io/minio/minio
          volumeMounts:
            - name: minio-data
              mountPath: /data
          ports:
            - containerPort: 9000
              name: http
            - containerPort: 9001
              name: console
          env:
            - name: MINIO_ROOT_USER
              value: {{ .Values.file_storage.minio_root_user | quote }}
            - name: MINIO_ROOT_PASSWORD
              value: {{ .Values.file_storage.minio_root_password | quote }}
          args: 
           - "server"
           - "--address"
           - "0.0.0.0:9000"
           - "--console-address"
           - "0.0.0.0:9001"
           - "/data"
          {{ if eq .Values.healthCheck "true" }}
          readinessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: {{ .Values.initialdelay }}
            periodSeconds: {{ .Values.interval }}
            timeoutSeconds: {{ .Values.timeout }}
            failureThreshold: {{ .Values.retries }}
          {{ end }}
      volumes:
        - name: minio-data
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.name | quote }}
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.namespace | quote }}
  name: {{ .Values.file_storage.servicename | quote }}
spec:
  selector:
    app: {{ .Values.file_storage.label.app | quote }}
  ports:
    - name: http
      port: 9000
      targetPort: 9000
    - name: console
      port: 9001
      targetPort: 9001
  type: ClusterIP
